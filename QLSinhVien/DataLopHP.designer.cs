#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QLSinhVien
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLDiemSinhVien")]
	public partial class DataLopHPDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InserttblLopHP(tblLopHP instance);
    partial void UpdatetblLopHP(tblLopHP instance);
    partial void DeletetblLopHP(tblLopHP instance);
    partial void InserttblGiaoVien(tblGiaoVien instance);
    partial void UpdatetblGiaoVien(tblGiaoVien instance);
    partial void DeletetblGiaoVien(tblGiaoVien instance);
    partial void InserttblHocKy(tblHocKy instance);
    partial void UpdatetblHocKy(tblHocKy instance);
    partial void DeletetblHocKy(tblHocKy instance);
    #endregion
		
		public DataLopHPDataContext() : 
				base(global::QLSinhVien.Properties.Settings.Default.QLDiemSinhVienConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public DataLopHPDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataLopHPDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataLopHPDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataLopHPDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tblLopHP> tblLopHPs
		{
			get
			{
				return this.GetTable<tblLopHP>();
			}
		}
		
		public System.Data.Linq.Table<tblGiaoVien> tblGiaoViens
		{
			get
			{
				return this.GetTable<tblGiaoVien>();
			}
		}
		
		public System.Data.Linq.Table<tblHocKy> tblHocKies
		{
			get
			{
				return this.GetTable<tblHocKy>();
			}
		}

        public object ContextOptions { get; internal set; }
    }
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LopHP")]
	public partial class tblLopHP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _maLHP;
		
		private string _maHP;
		
		private System.Nullable<int> _maHK;
		
		private string _tenLHP;
		
		private string _maGV;
		
		private int _sSMax;
		
		private int _sSDK;
		
		private EntityRef<tblGiaoVien> _tblGiaoVien;
		
		private EntityRef<tblHocKy> _tblHocKy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaLHPChanging(string value);
    partial void OnmaLHPChanged();
    partial void OnmaHPChanging(string value);
    partial void OnmaHPChanged();
    partial void OnmaHKChanging(System.Nullable<int> value);
    partial void OnmaHKChanged();
    partial void OntenLHPChanging(string value);
    partial void OntenLHPChanged();
    partial void OnmaGVChanging(string value);
    partial void OnmaGVChanged();
    partial void OnsSMaxChanging(int value);
    partial void OnsSMaxChanged();
    partial void OnsSDKChanging(int value);
    partial void OnsSDKChanged();
    #endregion
		
		public tblLopHP()
		{
			this._tblGiaoVien = default(EntityRef<tblGiaoVien>);
			this._tblHocKy = default(EntityRef<tblHocKy>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maLHP", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string maLHP
		{
			get
			{
				return this._maLHP;
			}
			set
			{
				if ((this._maLHP != value))
				{
					this.OnmaLHPChanging(value);
					this.SendPropertyChanging();
					this._maLHP = value;
					this.SendPropertyChanged("maLHP");
					this.OnmaLHPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maHP", DbType="Char(7)")]
		public string maHP
		{
			get
			{
				return this._maHP;
			}
			set
			{
				if ((this._maHP != value))
				{
					this.OnmaHPChanging(value);
					this.SendPropertyChanging();
					this._maHP = value;
					this.SendPropertyChanged("maHP");
					this.OnmaHPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maHK", DbType="Int")]
		public System.Nullable<int> maHK
		{
			get
			{
				return this._maHK;
			}
			set
			{
				if ((this._maHK != value))
				{
					if (this._tblHocKy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaHKChanging(value);
					this.SendPropertyChanging();
					this._maHK = value;
					this.SendPropertyChanged("maHK");
					this.OnmaHKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenLHP", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string tenLHP
		{
			get
			{
				return this._tenLHP;
			}
			set
			{
				if ((this._tenLHP != value))
				{
					this.OntenLHPChanging(value);
					this.SendPropertyChanging();
					this._tenLHP = value;
					this.SendPropertyChanged("tenLHP");
					this.OntenLHPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maGV", DbType="Char(5)")]
		public string maGV
		{
			get
			{
				return this._maGV;
			}
			set
			{
				if ((this._maGV != value))
				{
					if (this._tblGiaoVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaGVChanging(value);
					this.SendPropertyChanging();
					this._maGV = value;
					this.SendPropertyChanged("maGV");
					this.OnmaGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sSMax", DbType="Int NOT NULL")]
		public int sSMax
		{
			get
			{
				return this._sSMax;
			}
			set
			{
				if ((this._sSMax != value))
				{
					this.OnsSMaxChanging(value);
					this.SendPropertyChanging();
					this._sSMax = value;
					this.SendPropertyChanged("sSMax");
					this.OnsSMaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sSDK", DbType="Int NOT NULL")]
		public int sSDK
		{
			get
			{
				return this._sSDK;
			}
			set
			{
				if ((this._sSDK != value))
				{
					this.OnsSDKChanging(value);
					this.SendPropertyChanging();
					this._sSDK = value;
					this.SendPropertyChanged("sSDK");
					this.OnsSDKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiaoVien_tblLopHP", Storage="_tblGiaoVien", ThisKey="maGV", OtherKey="maGV", IsForeignKey=true, DeleteRule="CASCADE")]
		public tblGiaoVien tblGiaoVien
		{
			get
			{
				return this._tblGiaoVien.Entity;
			}
			set
			{
				tblGiaoVien previousValue = this._tblGiaoVien.Entity;
				if (((previousValue != value) 
							|| (this._tblGiaoVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblGiaoVien.Entity = null;
						previousValue.tblLopHPs.Remove(this);
					}
					this._tblGiaoVien.Entity = value;
					if ((value != null))
					{
						value.tblLopHPs.Add(this);
						this._maGV = value.maGV;
					}
					else
					{
						this._maGV = default(string);
					}
					this.SendPropertyChanged("tblGiaoVien");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocKy_tblLopHP", Storage="_tblHocKy", ThisKey="maHK", OtherKey="maHK", IsForeignKey=true, DeleteRule="CASCADE")]
		public tblHocKy tblHocKy
		{
			get
			{
				return this._tblHocKy.Entity;
			}
			set
			{
				tblHocKy previousValue = this._tblHocKy.Entity;
				if (((previousValue != value) 
							|| (this._tblHocKy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblHocKy.Entity = null;
						previousValue.tblLopHPs.Remove(this);
					}
					this._tblHocKy.Entity = value;
					if ((value != null))
					{
						value.tblLopHPs.Add(this);
						this._maHK = value.maHK;
					}
					else
					{
						this._maHK = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblHocKy");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GiaoVien")]
	public partial class tblGiaoVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _maGV;
		
		private string _hoTen;
		
		private System.Nullable<char> _gioiTinh;
		
		private string _sdt;
		
		private string _email;
		
		private System.Data.Linq.Binary _anh;
		
		private EntitySet<tblLopHP> _tblLopHPs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaGVChanging(string value);
    partial void OnmaGVChanged();
    partial void OnhoTenChanging(string value);
    partial void OnhoTenChanged();
    partial void OngioiTinhChanging(System.Nullable<char> value);
    partial void OngioiTinhChanged();
    partial void OnsdtChanging(string value);
    partial void OnsdtChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnanhChanging(System.Data.Linq.Binary value);
    partial void OnanhChanged();
    #endregion
		
		public tblGiaoVien()
		{
			this._tblLopHPs = new EntitySet<tblLopHP>(new Action<tblLopHP>(this.attach_tblLopHPs), new Action<tblLopHP>(this.detach_tblLopHPs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maGV", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string maGV
		{
			get
			{
				return this._maGV;
			}
			set
			{
				if ((this._maGV != value))
				{
					this.OnmaGVChanging(value);
					this.SendPropertyChanging();
					this._maGV = value;
					this.SendPropertyChanged("maGV");
					this.OnmaGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hoTen", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string hoTen
		{
			get
			{
				return this._hoTen;
			}
			set
			{
				if ((this._hoTen != value))
				{
					this.OnhoTenChanging(value);
					this.SendPropertyChanging();
					this._hoTen = value;
					this.SendPropertyChanged("hoTen");
					this.OnhoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gioiTinh", DbType="Char(1)")]
		public System.Nullable<char> gioiTinh
		{
			get
			{
				return this._gioiTinh;
			}
			set
			{
				if ((this._gioiTinh != value))
				{
					this.OngioiTinhChanging(value);
					this.SendPropertyChanging();
					this._gioiTinh = value;
					this.SendPropertyChanged("gioiTinh");
					this.OngioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sdt", DbType="VarChar(10)")]
		public string sdt
		{
			get
			{
				return this._sdt;
			}
			set
			{
				if ((this._sdt != value))
				{
					this.OnsdtChanging(value);
					this.SendPropertyChanging();
					this._sdt = value;
					this.SendPropertyChanged("sdt");
					this.OnsdtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(100)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_anh", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary anh
		{
			get
			{
				return this._anh;
			}
			set
			{
				if ((this._anh != value))
				{
					this.OnanhChanging(value);
					this.SendPropertyChanging();
					this._anh = value;
					this.SendPropertyChanged("anh");
					this.OnanhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiaoVien_tblLopHP", Storage="_tblLopHPs", ThisKey="maGV", OtherKey="maGV")]
		public EntitySet<tblLopHP> tblLopHPs
		{
			get
			{
				return this._tblLopHPs;
			}
			set
			{
				this._tblLopHPs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblLopHPs(tblLopHP entity)
		{
			this.SendPropertyChanging();
			entity.tblGiaoVien = this;
		}
		
		private void detach_tblLopHPs(tblLopHP entity)
		{
			this.SendPropertyChanging();
			entity.tblGiaoVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HocKy")]
	public partial class tblHocKy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maHK;
		
		private string _tenHK;
		
		private EntitySet<tblLopHP> _tblLopHPs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaHKChanging(int value);
    partial void OnmaHKChanged();
    partial void OntenHKChanging(string value);
    partial void OntenHKChanged();
    #endregion
		
		public tblHocKy()
		{
			this._tblLopHPs = new EntitySet<tblLopHP>(new Action<tblLopHP>(this.attach_tblLopHPs), new Action<tblLopHP>(this.detach_tblLopHPs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maHK", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int maHK
		{
			get
			{
				return this._maHK;
			}
			set
			{
				if ((this._maHK != value))
				{
					this.OnmaHKChanging(value);
					this.SendPropertyChanging();
					this._maHK = value;
					this.SendPropertyChanged("maHK");
					this.OnmaHKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenHK", DbType="NVarChar(10)")]
		public string tenHK
		{
			get
			{
				return this._tenHK;
			}
			set
			{
				if ((this._tenHK != value))
				{
					this.OntenHKChanging(value);
					this.SendPropertyChanging();
					this._tenHK = value;
					this.SendPropertyChanged("tenHK");
					this.OntenHKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocKy_tblLopHP", Storage="_tblLopHPs", ThisKey="maHK", OtherKey="maHK")]
		public EntitySet<tblLopHP> tblLopHPs
		{
			get
			{
				return this._tblLopHPs;
			}
			set
			{
				this._tblLopHPs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblLopHPs(tblLopHP entity)
		{
			this.SendPropertyChanging();
			entity.tblHocKy = this;
		}
		
		private void detach_tblLopHPs(tblLopHP entity)
		{
			this.SendPropertyChanging();
			entity.tblHocKy = null;
		}
	}
}
#pragma warning restore 1591

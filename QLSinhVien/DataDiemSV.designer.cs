#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QLSinhVien
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLDiemSinhVien")]
	public partial class DataDiemSVDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertSinhVien(SinhVien instance);
    partial void UpdateSinhVien(SinhVien instance);
    partial void DeleteSinhVien(SinhVien instance);
    partial void InsertLOP(LOP instance);
    partial void UpdateLOP(LOP instance);
    partial void DeleteLOP(LOP instance);
    partial void InsertHocKy(HocKy instance);
    partial void UpdateHocKy(HocKy instance);
    partial void DeleteHocKy(HocKy instance);
    partial void InsertTKHK(TKHK instance);
    partial void UpdateTKHK(TKHK instance);
    partial void DeleteTKHK(TKHK instance);
    #endregion
		
		public DataDiemSVDataContext() : 
				base(global::QLSinhVien.Properties.Settings.Default.QLDiemSinhVienConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataDiemSVDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataDiemSVDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataDiemSVDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataDiemSVDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<SinhVien> SinhViens
		{
			get
			{
				return this.GetTable<SinhVien>();
			}
		}
		
		public System.Data.Linq.Table<LOP> LOPs
		{
			get
			{
				return this.GetTable<LOP>();
			}
		}
		
		public System.Data.Linq.Table<HocKy> HocKies
		{
			get
			{
				return this.GetTable<HocKy>();
			}
		}
		
		public System.Data.Linq.Table<TKHK> TKHKs
		{
			get
			{
				return this.GetTable<TKHK>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SinhVien")]
	public partial class SinhVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _maSV;
		
		private string _hoTen;
		
		private System.Nullable<char> _gioiTinh;
		
		private System.Nullable<System.DateTime> _namSinh;
		
		private string _maLop;
		
		private string _diaChi;
		
		private EntitySet<TKHK> _TKHKs;
		
		private EntityRef<LOP> _LOP;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaSVChanging(string value);
    partial void OnmaSVChanged();
    partial void OnhoTenChanging(string value);
    partial void OnhoTenChanged();
    partial void OngioiTinhChanging(System.Nullable<char> value);
    partial void OngioiTinhChanged();
    partial void OnnamSinhChanging(System.Nullable<System.DateTime> value);
    partial void OnnamSinhChanged();
    partial void OnmaLopChanging(string value);
    partial void OnmaLopChanged();
    partial void OndiaChiChanging(string value);
    partial void OndiaChiChanged();
    #endregion
		
		public SinhVien()
		{
			this._TKHKs = new EntitySet<TKHK>(new Action<TKHK>(this.attach_TKHKs), new Action<TKHK>(this.detach_TKHKs));
			this._LOP = default(EntityRef<LOP>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maSV", DbType="VarChar(13) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string maSV
		{
			get
			{
				return this._maSV;
			}
			set
			{
				if ((this._maSV != value))
				{
					this.OnmaSVChanging(value);
					this.SendPropertyChanging();
					this._maSV = value;
					this.SendPropertyChanged("maSV");
					this.OnmaSVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hoTen", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string hoTen
		{
			get
			{
				return this._hoTen;
			}
			set
			{
				if ((this._hoTen != value))
				{
					this.OnhoTenChanging(value);
					this.SendPropertyChanging();
					this._hoTen = value;
					this.SendPropertyChanged("hoTen");
					this.OnhoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gioiTinh", DbType="Char(1)")]
		public System.Nullable<char> gioiTinh
		{
			get
			{
				return this._gioiTinh;
			}
			set
			{
				if ((this._gioiTinh != value))
				{
					this.OngioiTinhChanging(value);
					this.SendPropertyChanging();
					this._gioiTinh = value;
					this.SendPropertyChanged("gioiTinh");
					this.OngioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_namSinh", DbType="Date")]
		public System.Nullable<System.DateTime> namSinh
		{
			get
			{
				return this._namSinh;
			}
			set
			{
				if ((this._namSinh != value))
				{
					this.OnnamSinhChanging(value);
					this.SendPropertyChanging();
					this._namSinh = value;
					this.SendPropertyChanged("namSinh");
					this.OnnamSinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maLop", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string maLop
		{
			get
			{
				return this._maLop;
			}
			set
			{
				if ((this._maLop != value))
				{
					if (this._LOP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaLopChanging(value);
					this.SendPropertyChanging();
					this._maLop = value;
					this.SendPropertyChanged("maLop");
					this.OnmaLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diaChi", DbType="NVarChar(100)")]
		public string diaChi
		{
			get
			{
				return this._diaChi;
			}
			set
			{
				if ((this._diaChi != value))
				{
					this.OndiaChiChanging(value);
					this.SendPropertyChanging();
					this._diaChi = value;
					this.SendPropertyChanged("diaChi");
					this.OndiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SinhVien_TKHK", Storage="_TKHKs", ThisKey="maSV", OtherKey="maSV")]
		public EntitySet<TKHK> TKHKs
		{
			get
			{
				return this._TKHKs;
			}
			set
			{
				this._TKHKs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOP_SinhVien", Storage="_LOP", ThisKey="maLop", OtherKey="maLop", IsForeignKey=true)]
		public LOP LOP
		{
			get
			{
				return this._LOP.Entity;
			}
			set
			{
				LOP previousValue = this._LOP.Entity;
				if (((previousValue != value) 
							|| (this._LOP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOP.Entity = null;
						previousValue.SinhViens.Remove(this);
					}
					this._LOP.Entity = value;
					if ((value != null))
					{
						value.SinhViens.Add(this);
						this._maLop = value.maLop;
					}
					else
					{
						this._maLop = default(string);
					}
					this.SendPropertyChanged("LOP");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TKHKs(TKHK entity)
		{
			this.SendPropertyChanging();
			entity.SinhVien = this;
		}
		
		private void detach_TKHKs(TKHK entity)
		{
			this.SendPropertyChanging();
			entity.SinhVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOP")]
	public partial class LOP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _maLop;
		
		private string _maKhoa;
		
		private System.Nullable<int> _siSo;
		
		private EntitySet<SinhVien> _SinhViens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaLopChanging(string value);
    partial void OnmaLopChanged();
    partial void OnmaKhoaChanging(string value);
    partial void OnmaKhoaChanged();
    partial void OnsiSoChanging(System.Nullable<int> value);
    partial void OnsiSoChanged();
    #endregion
		
		public LOP()
		{
			this._SinhViens = new EntitySet<SinhVien>(new Action<SinhVien>(this.attach_SinhViens), new Action<SinhVien>(this.detach_SinhViens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maLop", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string maLop
		{
			get
			{
				return this._maLop;
			}
			set
			{
				if ((this._maLop != value))
				{
					this.OnmaLopChanging(value);
					this.SendPropertyChanging();
					this._maLop = value;
					this.SendPropertyChanged("maLop");
					this.OnmaLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maKhoa", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string maKhoa
		{
			get
			{
				return this._maKhoa;
			}
			set
			{
				if ((this._maKhoa != value))
				{
					this.OnmaKhoaChanging(value);
					this.SendPropertyChanging();
					this._maKhoa = value;
					this.SendPropertyChanged("maKhoa");
					this.OnmaKhoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_siSo", DbType="Int")]
		public System.Nullable<int> siSo
		{
			get
			{
				return this._siSo;
			}
			set
			{
				if ((this._siSo != value))
				{
					this.OnsiSoChanging(value);
					this.SendPropertyChanging();
					this._siSo = value;
					this.SendPropertyChanged("siSo");
					this.OnsiSoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOP_SinhVien", Storage="_SinhViens", ThisKey="maLop", OtherKey="maLop")]
		public EntitySet<SinhVien> SinhViens
		{
			get
			{
				return this._SinhViens;
			}
			set
			{
				this._SinhViens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SinhViens(SinhVien entity)
		{
			this.SendPropertyChanging();
			entity.LOP = this;
		}
		
		private void detach_SinhViens(SinhVien entity)
		{
			this.SendPropertyChanging();
			entity.LOP = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HocKy")]
	public partial class HocKy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maHK;
		
		private string _tenHK;
		
		private EntitySet<TKHK> _TKHKs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaHKChanging(int value);
    partial void OnmaHKChanged();
    partial void OntenHKChanging(string value);
    partial void OntenHKChanged();
    #endregion
		
		public HocKy()
		{
			this._TKHKs = new EntitySet<TKHK>(new Action<TKHK>(this.attach_TKHKs), new Action<TKHK>(this.detach_TKHKs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maHK", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int maHK
		{
			get
			{
				return this._maHK;
			}
			set
			{
				if ((this._maHK != value))
				{
					this.OnmaHKChanging(value);
					this.SendPropertyChanging();
					this._maHK = value;
					this.SendPropertyChanged("maHK");
					this.OnmaHKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenHK", DbType="NVarChar(10)")]
		public string tenHK
		{
			get
			{
				return this._tenHK;
			}
			set
			{
				if ((this._tenHK != value))
				{
					this.OntenHKChanging(value);
					this.SendPropertyChanging();
					this._tenHK = value;
					this.SendPropertyChanged("tenHK");
					this.OntenHKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocKy_TKHK", Storage="_TKHKs", ThisKey="maHK", OtherKey="maHK")]
		public EntitySet<TKHK> TKHKs
		{
			get
			{
				return this._TKHKs;
			}
			set
			{
				this._TKHKs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TKHKs(TKHK entity)
		{
			this.SendPropertyChanging();
			entity.HocKy = this;
		}
		
		private void detach_TKHKs(TKHK entity)
		{
			this.SendPropertyChanging();
			entity.HocKy = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TKHK")]
	public partial class TKHK : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maHK;
		
		private string _maSV;
		
		private System.Nullable<byte> _sTCDK;
		
		private System.Nullable<byte> _sTCTL;
		
		private System.Nullable<decimal> _dTBC;
		
		private EntityRef<HocKy> _HocKy;
		
		private EntityRef<SinhVien> _SinhVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaHKChanging(int value);
    partial void OnmaHKChanged();
    partial void OnmaSVChanging(string value);
    partial void OnmaSVChanged();
    partial void OnsTCDKChanging(System.Nullable<byte> value);
    partial void OnsTCDKChanged();
    partial void OnsTCTLChanging(System.Nullable<byte> value);
    partial void OnsTCTLChanged();
    partial void OndTBCChanging(System.Nullable<decimal> value);
    partial void OndTBCChanged();
    #endregion
		
		public TKHK()
		{
			this._HocKy = default(EntityRef<HocKy>);
			this._SinhVien = default(EntityRef<SinhVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maHK", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int maHK
		{
			get
			{
				return this._maHK;
			}
			set
			{
				if ((this._maHK != value))
				{
					if (this._HocKy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaHKChanging(value);
					this.SendPropertyChanging();
					this._maHK = value;
					this.SendPropertyChanged("maHK");
					this.OnmaHKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maSV", DbType="VarChar(13) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string maSV
		{
			get
			{
				return this._maSV;
			}
			set
			{
				if ((this._maSV != value))
				{
					if (this._SinhVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaSVChanging(value);
					this.SendPropertyChanging();
					this._maSV = value;
					this.SendPropertyChanged("maSV");
					this.OnmaSVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sTCDK", DbType="TinyInt")]
		public System.Nullable<byte> sTCDK
		{
			get
			{
				return this._sTCDK;
			}
			set
			{
				if ((this._sTCDK != value))
				{
					this.OnsTCDKChanging(value);
					this.SendPropertyChanging();
					this._sTCDK = value;
					this.SendPropertyChanged("sTCDK");
					this.OnsTCDKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sTCTL", DbType="TinyInt")]
		public System.Nullable<byte> sTCTL
		{
			get
			{
				return this._sTCTL;
			}
			set
			{
				if ((this._sTCTL != value))
				{
					this.OnsTCTLChanging(value);
					this.SendPropertyChanging();
					this._sTCTL = value;
					this.SendPropertyChanged("sTCTL");
					this.OnsTCTLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dTBC", DbType="Decimal(5,2)")]
		public System.Nullable<decimal> dTBC
		{
			get
			{
				return this._dTBC;
			}
			set
			{
				if ((this._dTBC != value))
				{
					this.OndTBCChanging(value);
					this.SendPropertyChanging();
					this._dTBC = value;
					this.SendPropertyChanged("dTBC");
					this.OndTBCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocKy_TKHK", Storage="_HocKy", ThisKey="maHK", OtherKey="maHK", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public HocKy HocKy
		{
			get
			{
				return this._HocKy.Entity;
			}
			set
			{
				HocKy previousValue = this._HocKy.Entity;
				if (((previousValue != value) 
							|| (this._HocKy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HocKy.Entity = null;
						previousValue.TKHKs.Remove(this);
					}
					this._HocKy.Entity = value;
					if ((value != null))
					{
						value.TKHKs.Add(this);
						this._maHK = value.maHK;
					}
					else
					{
						this._maHK = default(int);
					}
					this.SendPropertyChanged("HocKy");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SinhVien_TKHK", Storage="_SinhVien", ThisKey="maSV", OtherKey="maSV", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SinhVien SinhVien
		{
			get
			{
				return this._SinhVien.Entity;
			}
			set
			{
				SinhVien previousValue = this._SinhVien.Entity;
				if (((previousValue != value) 
							|| (this._SinhVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SinhVien.Entity = null;
						previousValue.TKHKs.Remove(this);
					}
					this._SinhVien.Entity = value;
					if ((value != null))
					{
						value.TKHKs.Add(this);
						this._maSV = value.maSV;
					}
					else
					{
						this._maSV = default(string);
					}
					this.SendPropertyChanged("SinhVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
